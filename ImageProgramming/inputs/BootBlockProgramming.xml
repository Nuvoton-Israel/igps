<?xml version="1.0" encoding="UTF-8"?>

<Bin_Ecc_Map>
	<!-- BMC mandatory fields -->
	<ImageProperties>
		<BinSize>0x20</BinSize>         <!-- If 0 the binary size will be calculated by the tool -->
		<PadValue>0x00</PadValue>	<!-- Byte value to pad the empty areas, default is 0 -->
	</ImageProperties>
		
	<BinField>
		<!-- offset 0x00 size 4: TAG - MC_INIT_TAG, SPI_PROGRAMMING_TAG, FUSE_PROGRAMMING_TAG or FUSE_READ_TAG -->
		<name>MonitorHeaderTag</name>         <!-- name of field -->
		<config>
			<offset>0</offset>            <!-- offset in the header -->
			<size>0x4</size>              <!-- size in the header -->
		</config>
		<content format='32bit'>0xA5075001</content>  <!-- content the user should fill -->
	</BinField>
	
	<BinField>
		<!-- offset 0x04 size 4: Size to program -->
		<name>size</name>         <!-- name of field -->
		<config>
			<offset>4</offset>            <!-- offset in the header -->
			<size>0x4</size>              <!-- size in the header -->
		</config>
		<content format='FileSize'>intermediate/BootBlockAndHeader.bin</content>  <!-- content the user should fill -->
	</BinField>
		
	<BinField>
		<!-- offset 0x08 size 4: Absolute address (code will check if offset + size is inside SPI -->
		<name>address</name>         <!-- name of field -->
		<config>
			<offset>8</offset>            <!-- offset in the header -->
			<size>0x4</size>              <!-- size in the header -->
		</config>
		<content format='32bit'>0x80000000</content>  <!-- content the user should fill -->
	</BinField>
		
	<BinField>
		<!-- offset 0x0C size 4: FIU_DWR_CFG_Set (Word contents copied by ROM code to relevant FIU FIU_DWR_CFG register - Ignored if either 0 or 0FFh) -->
		<name>fiu_dwr_cfg_set</name>         <!-- name of field -->
		<config>
			<offset>0xC</offset>            <!-- offset in the header -->
			<size>0x4</size>              <!-- size in the header -->
		</config>
		<content format='32bit'>0</content>  <!-- content the user should fill -->
	</BinField>
		
	<BinField>
		<!-- offset 0x10 size 4: FIU0_DRD_CFG_Set (Word contents copied by ROM code to relevant FIU FIU_DRD_CFG register - Ignored if either 0 or 0FFh) -->
		<name>fiu_drd_cfg_set</name>         <!-- name of field -->
		<config>
			<offset>0x10</offset>            <!-- offset in the header -->
			<size>0x4</size>              <!-- size in the header -->
		</config>
		<content format='32bit'>0</content>  <!-- content the user should fill -->
	</BinField>
		
	<BinField>
		<!-- offset 0x14 size 1: FIU_Clk_Divider (Defines the clock divide ratio from AHB to FIU0 clock - Ignored if either 0 or 0FFh) -->
		<name>fiu_clk_divider</name>         <!-- name of field -->
		<config>
			<offset>0x14</offset>            <!-- offset in the header -->
			<size>0x1</size>              <!-- size in the header -->
		</config>
		<content format='bytes'>0</content>  <!-- content the user should fill -->
	</BinField>
		
	<BinField>
		<!-- offset 0x15 size 1: command for erasing a page/sector (recommended the smallest size), if 0 the command will be 0x20 - sector erase -->
		<name>erase_cmd</name>         <!-- name of field -->
		<config>
			<offset>0x15</offset>            <!-- offset in the header -->
			<size>1</size>              <!-- size in the header -->
		</config>
		<content format='32bit'>0</content>  <!-- content the user should fill -->
	</BinField>
	
	<BinField>
		<!-- offset 0x16 size 1: the size of the erased area in power of 2: ie. if erase_size_power = 12, than the size is 2^12=4096 -->
		<name>erase_size_power</name>         <!-- name of field -->
		<config>
			<offset>0x16</offset>            <!-- offset in the header -->
			<size>1</size>              <!-- size in the header -->
		</config>
		<content format='32bit'>0</content>  <!-- content the user should fill -->
	</BinField>
	
	<BinField>
		<!-- offset 0x18 size 4: CRC of binary (optionally) -->
		<name>crc</name>         <!-- name of field -->
		<config>
			<offset>0x18</offset>            <!-- offset in the header -->
			<size>4</size>              <!-- size in the header -->
		</config>
		<content format='32bit'>0</content>  <!-- content the user should fill -->
	</BinField>
	
	<BinField>
		<!-- offset 0x1C size 4: The address of the binary to program (or to read into in fuse_read) -->
		<name>binary_address</name>         <!-- name of field -->
		<config>
			<offset>0x1C</offset>            <!-- offset in the header -->
			<size>4</size>              <!-- size in the header -->
		</config>
		<content format='32bit'>0xFFFE0000</content>  <!-- content the user should fill -->
	</BinField>
	
</Bin_Ecc_Map>
